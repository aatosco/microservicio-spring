# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- feature-ms-abrahamTosco-mensaje

jobs:
- job:
  pool:
    vmImage: 'ubuntu-latest'
  displayName: Build

  steps:

  - task: Gradle@3
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'build'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: false
      spotBugsAnalysis: false
    displayName: 'Compilacion/Build'

#- task: SonarCloudPrepare@1
#  inputs:
#    SonarCloud: 'SonarCloud'
#    organization: 'aatosco'
#    projectKey: 'aatosco_microservicio-spring'
#    projectName: 'microservicio-spring'
#    displayName: 'SonarCloud Prepare'

#- task: Gradle@3
#  inputs:
#    gradleWrapperFile: 'gradlew'
#    tasks: 'sonarqube'
#    publishJUnitResults: false
#    javaHomeOption: 'JDKVersion'
#    sonarQubeRunAnalysis: true
#    sqGradlePluginVersionChoice: 'specify'
#    sonarQubeGradlePluginVersion: '3.3'
#    spotBugsAnalysis: false


  - task: Docker@2
    inputs:
      containerRegistry: 'DockerHub'
      command: 'login'
    displayName: 'Login_Docker'


  - task: Docker@2
    inputs:
      containerRegistry: 'DockerHub'
      repository: 'aatosco/microservicio-spring'
      command: 'build'
      Dockerfile: '**/Dockerfile'
    displayName: 'Build_Imagen_Docker'


  - task: Docker@2
    inputs:
      containerRegistry: 'DockerHub'
      repository: 'aatosco/microservicio-spring'
      command: 'push'
    displayName: 'Push_Imagen_Docker'



- job: 
  pool: 'Default'
  steps:
  - task: Kubernetes@1
    inputs:
      connectionType: 'None'
      command: 'create'
      arguments: 'deployment microservicio-spring --image=aatosco/microservicio-spring'

  - script: kubectl port-forward deployment/microservicio-spring 8082:8085

